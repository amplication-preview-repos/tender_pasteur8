/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { ItemCreateNestedManyWithoutCharactersInput } from "./ItemCreateNestedManyWithoutCharactersInput";
import { Type } from "class-transformer";
import { EnumCharacterStatuses } from "./EnumCharacterStatuses";
import { TrackerCreateNestedManyWithoutCharactersInput } from "./TrackerCreateNestedManyWithoutCharactersInput";
import { TraitSetCreateNestedManyWithoutCharactersInput } from "./TraitSetCreateNestedManyWithoutCharactersInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class CharacterCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image?: string | null;

  @ApiProperty({
    required: false,
    type: () => ItemCreateNestedManyWithoutCharactersInput,
  })
  @ValidateNested()
  @Type(() => ItemCreateNestedManyWithoutCharactersInput)
  @IsOptional()
  @Field(() => ItemCreateNestedManyWithoutCharactersInput, {
    nullable: true,
  })
  items?: ItemCreateNestedManyWithoutCharactersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumCharacterStatuses,
  })
  @IsEnum(EnumCharacterStatuses)
  @IsOptional()
  @Field(() => EnumCharacterStatuses, {
    nullable: true,
  })
  statuses?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => TrackerCreateNestedManyWithoutCharactersInput,
  })
  @ValidateNested()
  @Type(() => TrackerCreateNestedManyWithoutCharactersInput)
  @IsOptional()
  @Field(() => TrackerCreateNestedManyWithoutCharactersInput, {
    nullable: true,
  })
  trackers?: TrackerCreateNestedManyWithoutCharactersInput;

  @ApiProperty({
    required: false,
    type: () => TraitSetCreateNestedManyWithoutCharactersInput,
  })
  @ValidateNested()
  @Type(() => TraitSetCreateNestedManyWithoutCharactersInput)
  @IsOptional()
  @Field(() => TraitSetCreateNestedManyWithoutCharactersInput, {
    nullable: true,
  })
  traitSets?: TraitSetCreateNestedManyWithoutCharactersInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { CharacterCreateInput as CharacterCreateInput };
