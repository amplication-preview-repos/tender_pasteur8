/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { ItemListRelationFilter } from "../../item/base/ItemListRelationFilter";
import { EnumCharacterStatuses } from "./EnumCharacterStatuses";
import { TrackerListRelationFilter } from "../../tracker/base/TrackerListRelationFilter";
import { TraitSetListRelationFilter } from "../../traitSet/base/TraitSetListRelationFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class CharacterWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  image?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ItemListRelationFilter)
  @IsOptional()
  @Field(() => ItemListRelationFilter, {
    nullable: true,
  })
  items?: ItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumCharacterStatuses,
  })
  @IsEnum(EnumCharacterStatuses)
  @IsOptional()
  @Field(() => EnumCharacterStatuses, {
    nullable: true,
  })
  statuses?: "Option1";

  @ApiProperty({
    required: false,
    type: () => TrackerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TrackerListRelationFilter)
  @IsOptional()
  @Field(() => TrackerListRelationFilter, {
    nullable: true,
  })
  trackers?: TrackerListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TraitSetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TraitSetListRelationFilter)
  @IsOptional()
  @Field(() => TraitSetListRelationFilter, {
    nullable: true,
  })
  traitSets?: TraitSetListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}

export { CharacterWhereInput as CharacterWhereInput };
