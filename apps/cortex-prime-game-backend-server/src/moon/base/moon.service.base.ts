/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Moon as PrismaMoon } from "@prisma/client";

export class MoonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MoonCountArgs, "select">): Promise<number> {
    return this.prisma.moon.count(args);
  }

  async moons(args: Prisma.MoonFindManyArgs): Promise<PrismaMoon[]> {
    return this.prisma.moon.findMany(args);
  }
  async moon(args: Prisma.MoonFindUniqueArgs): Promise<PrismaMoon | null> {
    return this.prisma.moon.findUnique(args);
  }
  async createMoon(args: Prisma.MoonCreateArgs): Promise<PrismaMoon> {
    return this.prisma.moon.create(args);
  }
  async updateMoon(args: Prisma.MoonUpdateArgs): Promise<PrismaMoon> {
    return this.prisma.moon.update(args);
  }
  async deleteMoon(args: Prisma.MoonDeleteArgs): Promise<PrismaMoon> {
    return this.prisma.moon.delete(args);
  }
}
